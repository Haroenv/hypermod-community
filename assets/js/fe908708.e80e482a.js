"use strict";(self.webpackChunkcodeshift_community=self.webpackChunkcodeshift_community||[]).push([[638],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5843:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var a=n(3117),o=n(102),r=(n(7294),n(3905)),i=["components"],l={id:"authoring",title:"Authoring",slug:"/authoring"},c=void 0,u={unversionedId:"authoring",id:"authoring",title:"Authoring",description:"There are currently three approaches to authoring and publishing a codeshift package.",source:"@site/docs/authoring.mdx",sourceDirName:".",slug:"/authoring",permalink:"/docs/authoring",editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/main/website/docs/authoring.mdx",tags:[],version:"current",frontMatter:{id:"authoring",title:"Authoring",slug:"/authoring"},sidebar:"docs",previous:{title:"Glossary",permalink:"/docs/glossary"},next:{title:"Consuming",permalink:"/docs/consuming"}},s={},d=[{value:"1. Contribute to the Community Folder",id:"1-contribute-to-the-community-folder",level:2},{value:"2. Add codeshift to an existing package",id:"2-add-codeshift-to-an-existing-package",level:2},{value:"3. Create a stand-alone codeshift package",id:"3-create-a-stand-alone-codeshift-package",level:2}],p={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"There are currently three approaches to authoring and publishing a codeshift package.\nWhich one to use depends on your particular use case."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#1-contribute-to-the-community-folder"},"Contribute to the Community Folder")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#2-add-codeshift-to-an-existing-package"},"Add codeshift to an existing package")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#3-create-a-stand-alone-codeshift-package"},"Create a stand-alone codeshift package"))),(0,r.kt)("h2",{id:"1-contribute-to-the-community-folder"},"1. Contribute to the Community Folder"),(0,r.kt)("p",null,"The Community Folder is the public directory of codemods hosted and published directly from this repository, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community"},"visible here"),".\nThis directory can be compared to and treated the same as the Typescript type definition registry: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DefinitelyTyped/DefinitelyTyped"},"DefinitelyTyped"),"."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Please see the ",(0,r.kt)("a",{parentName:"em",href:"contribution"},"Contribution guide")," for more information.")),(0,r.kt)("p",null,"Use this method if you want:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Your codemods to be open source"),(0,r.kt)("li",{parentName:"ul"},"Build tooling, dependency management and project setup to be handled for you"),(0,r.kt)("li",{parentName:"ul"},"The community to help maintain and contribute to your codemods"),(0,r.kt)("li",{parentName:"ul"},"Documentation to be automatically generated and available on the ",(0,r.kt)("a",{parentName:"li",href:"registry"},"Registry page"))),(0,r.kt)("p",null,"Do not use this method if:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Your codemods target a closed source package/repository"),(0,r.kt)("li",{parentName:"ul"},"Your codemods are generic in that they do not target any particular package"),(0,r.kt)("li",{parentName:"ul"},"Your codemods should be close sourced or contain sensitive data")),(0,r.kt)("h2",{id:"2-add-codeshift-to-an-existing-package"},"2. Add codeshift to an existing package"),(0,r.kt)("p",null,"For existing npm packages (like react), you have the option to expose codemods directly from the package by simply creating a ",(0,r.kt)("inlineCode",{parentName:"p"},"codeshift.config.js")," at either the root, ",(0,r.kt)("inlineCode",{parentName:"p"},"/src")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"/codemods")," directory.\nGiven that the config and codemod files are then published and available on NPM, ",(0,r.kt)("inlineCode",{parentName:"p"},"codeshift")," will be able to find and run codemods using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--package")," flag."),(0,r.kt)("p",null,"Use this method if you want:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Open or closed sourced packages"),(0,r.kt)("li",{parentName:"ul"},"To get up and running with an existing package with very little overhead"),(0,r.kt)("li",{parentName:"ul"},"Control over where and how your codeshift package is hosted"),(0,r.kt)("li",{parentName:"ul"},"Control over tooling, dependencies and techstack"),(0,r.kt)("li",{parentName:"ul"},"To remove a previously created ",(0,r.kt)("inlineCode",{parentName:"li"},"jscodeshift")," cli wrapper and instead use the generic ",(0,r.kt)("inlineCode",{parentName:"li"},"codeshift")," cli")),(0,r.kt)("p",null,"Do not use this method if:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You want docs to be automatically generated and available on the ",(0,r.kt)("a",{parentName:"li",href:"registry"},"Registry page"))),(0,r.kt)("h2",{id:"3-create-a-stand-alone-codeshift-package"},"3. Create a stand-alone codeshift package"),(0,r.kt)("p",null,"Codeshift packages can be created as a stand-alone package."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Please see the ",(0,r.kt)("a",{parentName:"em",href:"external-packages"},"External Packages guide")," for more information.")),(0,r.kt)("p",null,"Use this method if you want:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Open or closed sourced packages"),(0,r.kt)("li",{parentName:"ul"},"Control over where and how your codeshift package is hosted"),(0,r.kt)("li",{parentName:"ul"},"Control over tooling, dependencies and techstack"),(0,r.kt)("li",{parentName:"ul"},"The option to create completely generic codemods that don't target specific packages")),(0,r.kt)("p",null,"Do not use this method if:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Your codemods target a closed source package/repository")))}m.isMDXComponent=!0}}]);