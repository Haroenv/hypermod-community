"use strict";(self.webpackChunkcodeshift_community=self.webpackChunkcodeshift_community||[]).push([[6325],{3905:function(e,t,o){o.d(t,{Zo:function(){return c},kt:function(){return g}});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var p=r.createContext({}),m=function(e){var t=r.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=m(o),d=n,g=u["".concat(p,".").concat(d)]||u[d]||l[d]||a;return o?r.createElement(g,i(i({ref:t},c),{},{components:o})):r.createElement(g,i({ref:t},c))}));function g(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var m=2;m<a;m++)i[m]=o[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},177:function(e,t,o){o.r(t),o.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return l},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return m}});var r=o(3117),n=(o(7294),o(3905));const a={id:"javascript",title:"javascript",slug:"/registry/javascript",keywords:["codemods","javascript","code evolution","code migration","package updates","automated code updates"],description:"Explore codemods for javascript."},i=void 0,s={unversionedId:"registry-generated/javascript",id:"registry-generated/javascript",title:"javascript",description:"Explore codemods for javascript.",source:"@site/docs/registry-generated/javascript.mdx",sourceDirName:"registry-generated",slug:"/registry/javascript",permalink:"/docs/registry/javascript",draft:!1,editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/main/website/docs/registry-generated/javascript.mdx",tags:[],version:"current",frontMatter:{id:"javascript",title:"javascript",slug:"/registry/javascript",keywords:["codemods","javascript","code evolution","code migration","package updates","automated code updates"],description:"Explore codemods for javascript."},sidebar:"registry",previous:{title:"emotion/monorepo",permalink:"/docs/registry/emotion__monorepo"},next:{title:"memoize-one",permalink:"/docs/registry/memoize-one"}},p={},m=[{value:"Presets",id:"presets",level:2},{value:"remove-console-log",id:"remove-console-log",level:3},{value:"remove-debugger",id:"remove-debugger",level:3},{value:"sort-object-props",id:"sort-object-props",level:3},{value:"var-to-let",id:"var-to-let",level:3},{value:"remove-unused-vars",id:"remove-unused-vars",level:3}],c={toc:m},u="wrapper";function l(e){let{components:t,...o}=e;return(0,n.kt)(u,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Maintainers:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/danieldelcore"},"danieldelcore"))),(0,n.kt)("h2",{id:"presets"},"Presets"),(0,n.kt)("h3",{id:"remove-console-log"},"remove-console-log"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community/javascript"},"Source")," | ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/issues/new?title=javascript@remove-console-log"},"Report an issue")),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Usage")," ",(0,n.kt)("inlineCode",{parentName:"p"},"$ codeshift --packages javascript#remove-console-log path/to/source"))),(0,n.kt)("p",null,"Removes all ",(0,n.kt)("inlineCode",{parentName:"p"},"console.log")," statements."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"/* INPUT */\nconsole.log('hello world');\nfoo('bar');\n\n/* OUTPUT */\nfoo('bar');\n")),(0,n.kt)("h3",{id:"remove-debugger"},"remove-debugger"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community/javascript"},"Source")," | ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/issues/new?title=javascript@remove-debugger"},"Report an issue")),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Usage")," ",(0,n.kt)("inlineCode",{parentName:"p"},"$ codeshift --packages javascript#remove-debugger path/to/source"))),(0,n.kt)("p",null,"Removes all ",(0,n.kt)("inlineCode",{parentName:"p"},"debugger")," statements."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Credit"),": ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/JamieMason/codemods"},"https://github.com/JamieMason/codemods")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"/* INPUT */\nconsole.log('hello world');\ndebugger;\n\n/* OUTPUT */\nconsole.log('hello world');\n")),(0,n.kt)("h3",{id:"sort-object-props"},"sort-object-props"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community/javascript"},"Source")," | ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/issues/new?title=javascript@sort-object-props"},"Report an issue")),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Usage")," ",(0,n.kt)("inlineCode",{parentName:"p"},"$ codeshift --packages javascript#sort-object-props path/to/source"))),(0,n.kt)("p",null,"Sort members of Object Literals alphabetically."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Credit"),": ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/JamieMason/codemods"},"https://github.com/JamieMason/codemods")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"/* INPUT */\nconst players = { messi: true, bergkamp: true, ginola: true };\n\n/* OUTPUT */\nconst players = { bergkamp: true, ginola: true, messi: true };\n")),(0,n.kt)("h3",{id:"var-to-let"},"var-to-let"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community/javascript"},"Source")," | ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/issues/new?title=javascript@var-to-let"},"Report an issue")),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Usage")," ",(0,n.kt)("inlineCode",{parentName:"p"},"$ codeshift --packages javascript#var-to-let path/to/source"))),(0,n.kt)("p",null,"Replace all ",(0,n.kt)("inlineCode",{parentName:"p"},"var")," calls to use ",(0,n.kt)("inlineCode",{parentName:"p"},"let"),"."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Credit"),": ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/JamieMason/codemods"},"https://github.com/JamieMason/codemods")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"/* INPUT */\nvar foo = 'foo';\n\n/* OUTPUT */\nlet foo = 'foo';\n")),(0,n.kt)("h3",{id:"remove-unused-vars"},"remove-unused-vars"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community/javascript"},"Source")," | ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/issues/new?title=javascript@remove-unused-vars"},"Report an issue")),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"Usage")," ",(0,n.kt)("inlineCode",{parentName:"p"},"$ codeshift --packages javascript#remove-unused-vars path/to/source"))),(0,n.kt)("p",null,"Codemods for javascript#remove-unused-vars"),(0,n.kt)("p",null,"Detects and removes unused variables in JavaScript code."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Credit:")," ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/coderaiser/putout/tree/master/packages/plugin-remove-unused-variables#readme"},"https://github.com/coderaiser/putout/tree/master/packages/plugin-remove-unused-variables")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"/* INPUT */\nconst x = 1;\nconst y = 2;\nconsole.log(y);\n\n/* OUTPUT */\nconst y = 2;\nconsole.log(y);\n")))}l.isMDXComponent=!0}}]);