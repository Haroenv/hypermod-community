"use strict";(self.webpackChunkcodeshift_community=self.webpackChunkcodeshift_community||[]).push([[6578],{3905:function(e,t,o){o.d(t,{Zo:function(){return d},kt:function(){return f}});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function c(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):c(c({},t),e)),o},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),m=u(o),y=n,f=m["".concat(s,".").concat(y)]||m[y]||l[y]||i;return o?r.createElement(f,c(c({ref:t},d),{},{components:o})):r.createElement(f,c({ref:t},d))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,c=new Array(i);c[0]=y;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[m]="string"==typeof e?e:n,c[1]=a;for(var u=2;u<i;u++)c[u]=o[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,o)}y.displayName="MDXCreateElement"},946:function(e,t,o){o.r(t),o.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return l},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return u}});var r=o(3117),n=(o(7294),o(3905));const i={id:"registry",title:"Registry",slug:"/registry",description:"Welcome to the codemod registry. This is a collection of high-quality codemods that have been contributed by members of the codeshiftcommunity. Browse our registry to find codemods that can help you automatically refactor your codebase, or contribute your own codemods to share with the community.'",keywords:["codemod registry","codeshiftcommunity","codemods","refactor","codebase","contribution"]},c=void 0,a={unversionedId:"registry",id:"registry",title:"Registry",description:"Welcome to the codemod registry. This is a collection of high-quality codemods that have been contributed by members of the codeshiftcommunity. Browse our registry to find codemods that can help you automatically refactor your codebase, or contribute your own codemods to share with the community.'",source:"@site/docs/registry.mdx",sourceDirName:".",slug:"/registry",permalink:"/docs/registry",draft:!1,editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/main/website/docs/registry.mdx",tags:[],version:"current",frontMatter:{id:"registry",title:"Registry",slug:"/registry",description:"Welcome to the codemod registry. This is a collection of high-quality codemods that have been contributed by members of the codeshiftcommunity. Browse our registry to find codemods that can help you automatically refactor your codebase, or contribute your own codemods to share with the community.'",keywords:["codemod registry","codeshiftcommunity","codemods","refactor","codebase","contribution"]},sidebar:"registry",next:{title:"atlaskit/avatar",permalink:"/docs/registry/atlaskit__avatar"}},s={},u=[{value:"Contribution",id:"contribution",level:2},{value:"Running registry codemods",id:"running-registry-codemods",level:2}],d={toc:u},m="wrapper";function l(e){let{components:t,...o}=e;return(0,n.kt)(m,(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Welcome to the CodeshiftCommunity Public Registry. This is a collection of high-quality codemods that have been contributed by members of the community.\nBrowse our registry to find codemods that can help you automatically refactor your codebase, or contribute your own codemods to share with the community."),(0,n.kt)("p",null,"Source for these packages can be found in the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community"},"/community folder"),"."),(0,n.kt)("h2",{id:"contribution"},"Contribution"),(0,n.kt)("p",null,"Anyone is able to contribute packages and fixes to the registry. To contribute please see the ",(0,n.kt)("a",{parentName:"p",href:"/docs/contribution"},"contribution guide"),"."),(0,n.kt)("p",null,"For other publishing options, including private and external codemod packages, please refer to the ",(0,n.kt)("a",{parentName:"p",href:"/docs/authoring"},"Authoring guide"),"."),(0,n.kt)("h2",{id:"running-registry-codemods"},"Running registry codemods"),(0,n.kt)("p",null,"Codemods from the registry can be run via the Codeshift CLI, for example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"$ npx @codeshift/cli --packages @atlaskit/button /project/src\n")),(0,n.kt)("p",null,"See the ",(0,n.kt)("a",{parentName:"p",href:"/docs/cli"},"CLI reference")," for more information."))}l.isMDXComponent=!0}}]);